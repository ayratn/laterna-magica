#every bean must implement Runnable. The run method is called
#for all the beans in order, not in separate threads.

#Configures log4j & exception handling
log4j--tree-properties=<<<0
	class--class=net.slightlymagic.utils.Log4jConfigurator
	
	url--path=log4j.properties
	exceptionHandling--boolean=true
0>>>

#Configures the application's code source as a URL in the net.slightlymagic.laterna.magica.codesource system property
LaternaMagicaCodeSource--tree-properties=<<<0
	class--class=net.slightlymagic.utils.CodeSourceConfigurator
	
	property=net.slightlymagic.laterna.magica.codebase
	ref--class=net.slightlymagic.laterna.magica.LaternaMagica
0>>>

#Configures a PropertyTree instance
PropertyTree--tree-properties=<<<0
	class--class=net.slightlymagic.utils.PropertyTreeConfigurator
	
	propertyTreeClass--class=net.slightlymagic.treeProperties.PropertyTree
	url--path=laterna.properties
0>>>

#Unpacks or downloads libraries as needed
#Libraries--tree-properties=<<<1
#	class--class=net.slightlymagic.utils.LibraryConfigurator
#	
#	library--tree-properties=<<<0
#		class--class=net.slightlymagic.utils.LibraryConfigurator$Library
#		#The location in which the library is expected
#		loc--path=${net.slightlymagic.codesource}lib/guava-r06.jar
#		#Multiple URLs to try...
#		#Those defined as "res" are local, tried without the user's permission
#		res--path=lib/guava-r06.jar
#		#Those defined as "url" are remote, tried after the user's acknowledgement
#		url--path=http://code.google.com/...
#	0>>>
#1>>>

#unzip.resource.class=laterna.magica.LaternaMagica
#unzip.resource.path=/props.zip
#unzip.destination=props
#unzip.check=props/laterna.properties

#properties.language.format=/laterna/res/lang/%%s/%s
#properties.language.preferred.key=/laterna/usr/lang
