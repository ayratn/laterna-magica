/**
 * ContinuousEffect.java
 * 
 * Created on 12.07.2009
 */

package net.slightlymagic.laterna.magica.effect;


import net.slightlymagic.laterna.magica.timestamp.Timestamped;


/**
 * The class ContinuousEffect. This interface specifies the common methods for all continuous effects.
 * 
 * <p>
 * {@magic.ruleRef 20100716/R6111} A continuous effect modifies characteristics of objects,
 * modifies control of objects, or affects players or the rules of the game, for a fixed or indefinite period.
 * </p>
 * 
 * Such effects can either be <i>local</i>:
 * 
 * <p>
 * {@magic.ruleRef 20100716/R6112c} If a continuous effect generated by the resolution of a spell
 * or ability modifies the characteristics or changes the controller of any objects, the set of objects it affects
 * is determined when that continuous effect begins. After that point, the set won't change. ...
 * </p>
 * 
 * or <i>global</i>:
 * 
 * <p>
 * {@magic.ruleRef 20100716/R6112c} ... A continuous effect generated by the resolution of a spell
 * or ability that doesn't modify the characteristics or change the controller of any objects modifies the rules of
 * the game, so it can affect objects that weren't affected when that continuous effect began.
 * </p>
 * 
 * <p>
 * {@magic.ruleRef 20100716/R6113a} A continuous effect generated by a static ability isn't
 * "locked in"; it applies at any given moment to whatever its text indicates.
 * </p>
 * 
 * 
 * 
 * @version V0.0 12.07.2009
 * @author Clemens Koza
 */
public interface ContinuousEffect extends Timestamped {
    /**
     * The layers of applying continuous effects ({@magic.ruleRef 20100716/R613}). There are seven
     * layers, the seventh made up of five sublayers. Effects are applied in the order as the layers are stated
     * here.
     * 
     * Every layer here is duplicated. The one including "_" is for characteristic-defining abilities, which are
     * applied before other effects.
     * 
     * The last layer, {@link #RULE}, is for rules-changing effects. rules-changing effects are applied after all
     * other continuous effects.
     * 
     * Another type of continuous effects are replacement effects. Replacement effect don't do something over a
     * period of time, but wait for an event to happen. Layers are not applicable to them.
     */
    public static enum Layer {
        /**
         * Copy effects from characteristic-defining abilities are applied here
         */
        L_1,
        /**
         * Copy effects are applied here
         */
        L1,
        /**
         * Control-changing effects from characteristic-defining abilities are applied here
         */
        L_2,
        /**
         * Control-changing effects are applied here
         */
        L2,
        /**
         * Text-changing effects from characteristic-defining abilities are applied here
         */
        L_3,
        /**
         * Text-changing effects are applied here
         */
        L3,
        /**
         * Type-changing effects from characteristic-defining abilities are applied here
         */
        L_4,
        /**
         * Type-changing effects are applied here
         */
        L4,
        /**
         * Color-changing effects from characteristic-defining abilities are applied here
         */
        L_5,
        /**
         * Color-changing effects are applied here
         */
        L5,
        /**
         * Ability-adding/-removing effects from characteristic-defining abilities are applied here
         */
        L_6,
        /**
         * Ability-adding/-removing effects are applied here
         */
        L6,
        /**
         * P/T-changing effects from characteristic-defining abilities are applied here
         */
        L7a,
        /**
         * P/T-setting effects are applied here
         */
        L7b,
        /**
         * P/T-changing effects are applied here
         */
        L7c,
        /**
         * P/T-changes from counters are applied here
         */
        L7d,
        /**
         * P/T-switching effects are applied here
         */
        L7e,
        /**
         * Rules-changing effects are applied here
         */
        RULE;
    }
    
    /**
     * Returns the layer in which the effect is applied. {@code null} for replacement effects, and the intrinsic
     * effects that apply a card part's values to characteristics.
     */
    public Layer getLayer();
}
